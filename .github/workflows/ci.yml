name: CI

on:
  pull_request:
    branches: [main, develop]
  push:
    branches: [main, develop]

jobs:
  changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
      frontend: ${{ steps.filter.outputs.frontend }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            backend:
              - 'backend/**'
              - 'pyproject.toml'
              - 'poetry.lock'
            frontend:
              - 'frontend/**'
              - 'package.json'
              - 'yarn.lock'

  backend-tests:
    needs: changes
    if: ${{ needs.changes.outputs.backend == 'true' }}
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"
          cache: "poetry"

      - name: Add Poetry to PATH
        run: echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Install dependencies
        working-directory: ./backend
        run: |
          poetry install --with dev

      - name: Run linting and type checks
        working-directory: ./backend
        run: |
          poetry run black . --check
          poetry run isort . --check
          poetry run flake8 .
          poetry run mypy .

      - name: Run tests with coverage
        working-directory: ./backend
        env:
          DATABASE_URL: postgresql://test:test@localhost:5432/test_db
          SECRET_KEY: test_secret_key
        run: |
          poetry run pytest --cov=app --cov-report=term-missing

  frontend-tests:
    needs: changes
    if: ${{ needs.changes.outputs.frontend == 'true' }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"
          cache: "yarn"
          cache-dependency-path: "./frontend/yarn.lock"

      - name: Install dependencies
        working-directory: ./frontend
        run: yarn install --frozen-lockfile

      - name: Run linting and type checks
        working-directory: ./frontend
        run: |
          yarn lint
          yarn format:check
          yarn type-check

      - name: Run tests with coverage
        working-directory: ./frontend
        run: |
          yarn test --coverage
