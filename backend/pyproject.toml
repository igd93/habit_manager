[tool.poetry]
name = "productivity-app"
version = "0.1.0"
description = "A productivity app with habit tracking"
authors = ["Your Name <your.email@example.com>"]

[tool.poetry.dependencies]
python = "^3.12"
fastapi = "^0.109.0"
uvicorn = {extras = ["standard"], version = "^0.27.0"}
sqlalchemy = "^2.0.25"
pydantic = "^2.6.1"
pydantic-settings = "^2.1.0"
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
python-multipart = "^0.0.6"
minio = "^7.2.0"
email-validator = "^2.1.0"
python-dotenv = "^1.0.0"
types-python-jose = "^3.4.0.20250224"
types-passlib = "^1.7.7.20250408"

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.0"
black = "^24.1.1"
isort = "^5.13.2"
flake8 = "^7.0.0"
pytest-cov = "^4.1.0"
mypy = "^1.8.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line_length = 88
target-version = ["py312"]

[tool.isort]
profile = "black"
line_length = 88

[tool.pytest.ini_options]
pythonpath = [
    "."
]
testpaths = [
    "tests"
]
python_files = ["test_*.py"]
addopts = "--cov=app --cov-report=xml --cov-report=term-missing --cov-fail-under=50"

[tool.coverage.run]
source = ["app"]
branch = true

[tool.coverage.report]
fail_under = 50
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
] 